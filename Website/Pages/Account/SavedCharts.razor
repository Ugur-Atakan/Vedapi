@using VedAstro.Library
@attribute [Route(PageRoute.SavedCharts)]

<PageTitle>Saved Charts</PageTitle>

<PageTop Title="Saved Charts" IconName="fluent:people-list-20-filled">
    <Description>
        List of events charts saved under your account. Saved charts can be viewed faster than calculating new charts.
        Saved charts can also be shared as an image.
    </Description>
    <ButtonsRow>
        @*
        <IconButton IconName="ant-design:user-add-outlined" ButtonText="Add Person" ClickUrl="@PageRoute.AddPerson"></IconButton>
              <IconButton IconName="dashicons:video-alt3" ButtonText="Watch Guide" OnClickCallback="()=> _jsRuntime.OpenNewTab(PageRoute.AddPersonGuideVideo)"></IconButton>
        *@
    </ButtonsRow>
</PageTop>


@if (_isReady)
{

    <table class="table table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>Name</th>
                <th>ChartId</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var chart in savedChartNameList)
            {
                <tr style="cursor: pointer;">
                    <td>@chart.Name</td>
                    <td>@chart.ChartId</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="fw-bold">No saved charts found.<br /> To save a new one, calculate a chart and then click as in cloud.</p>
}


@code {

    private List<ChartName> savedChartNameList = new List<ChartName>();
    private bool _isReady = false;

    //█░░ █ █▀▀ █▀▀ █▀▀ █▄█ █▀▀ █░░ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▄▄ █ █▀░ ██▄ █▄▄ ░█░ █▄▄ █▄▄ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█
    //METHODS THAT CAN IMPLEMENT ASYNC ERROR HANDLER


    protected override async Task OnInitializedAsync()
    {
        await GenerateTable();
    }


    //█▀█ █▀█ █ █░█ ▄▀█ ▀█▀ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▀▀ █▀▄ █ ▀▄▀ █▀█ ░█░ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█

    private async Task GenerateTable()
    {
        await _jsRuntime.ShowLoading();

        _isReady = false;

        //get all people from API server
        //auto checks if people list already loaded before
        savedChartNameList = await WebsiteTools.GetSavedChartNameList();

        _isReady = true;

        _jsRuntime.HideAlert();
    }


}
