@using System.Xml.Linq
@using VedAstro.Library
@attribute [Route(PageRoute.AskAstrologer)]

<PageTitle>Ask Astrologer For Free</PageTitle>
<PageTop Title="Ask Astrologer" IconName="wpf:ask-question">
    <Description>
        In our non-profit effort to help people.
        We provide <span class="fw-bold">FREE</span> vedic astrology service.
        Ask our astrologers about your finance, marriage, health, job, etc.
    </Description>
    <ButtonsRow>
        <IconButton SmallSize="true" IconName="iconoir:donate" ButtonText="Donate" OnClickCallback="() =>AppData.Go(PageRoute.Donate)"></IconButton>
        <IconButton SmallSize="true" IconName="bx:book-reader" ButtonText="Help" OnClickCallback="@_helpSection.Show"></IconButton>
    </ButtonsRow>
</PageTop>



<div class="vstack gap-2 mt-2" style="max-width: @GR.W412px;">

    <div>
        <label for="emailInputId">Email</label>
        <input @bind="_emailInput" type="text" id="emailInputId" class="form-control" placeholder="john@example.com">
    </div>

    <div>
        <label class="form-label">
            Question
            <HelpIconTooltip SmallIcon="true" HelpText="@HelpText.AskAstrologerQuestion"/>
        </label>
        <select @bind="_questionInput" class="form-control">
            <option value="">Select</option>
            <option value="When is my marriage?">When is my marriage?</option>
            <option value="Should I get a divorce?">Should I get a divorce?</option>
            <option value="When is my job promotion?">When is my job promotion?</option>
            <option value="My good &amp; bad periods in life?">My good &amp; bad periods in life?</option>
            <option value="Can I invest in risky business?">Can I invest in risky business?</option>
            <option value="Will I win the lottery?">Will I win the lottery?</option>
            <option value="Other">Other</option>

        </select>
    </div>

    <div>
        <label for="messageInputId">
            Details
            <HelpIconTooltip SmallIcon="true" HelpText="@HelpText.AskAstrologerDetails"/>
        </label>
        <textarea style="min-height: 132px;" class="form-control" @bind="_detailsInput" id="messageInputId" placeholder="Enter extra info about your question"></textarea>
    </div>
    <IconButton SmallSize="true" OnClickCallback="SendMessage" ButtonText="Send" IconName="bi:send-check" />
</div>



@*HELP SECTION*@
<PageHelpSection @ref="_helpSection">
    <Content>
        <h4 class="fw-bold">How long to get reply?</h4>
        <p class="text-justify mb-4" >
            Our astrologers will try to reply as soon as possible.
            Please remember, it will take some time for an astrologer to analyse
            your chart and give you an accurate reading.
            Depending on your question and the availability of the astrologers the time will differ.
        </p>

        <h4 class="fw-bold">I'm an Astrologer, can I help?</h4>
        <p class="text-justify mb-4">
            That's great! We need astrologers like you to help people
            around the world with the knowledge of Vedic Astrology.
            Go to our contact page and let us know that you'd like to join.
        </p>
    </Content>
</PageHelpSection>


@code {
    private PageHelpSection _helpSection;

    private string? _questionInput;
    private string? _detailsInput;
    private string? _emailInput;


    //█▀█ █▀█ █ █░█ ▄▀█ ▀█▀ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▀▀ █▀▄ █ ▀▄▀ █▀█ ░█░ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█

    private async Task SendMessage()
    {

        //only continue if passed input field validation
        if (!ValidationPassed()) { return; }

        //loading box show
       await _jsRuntime.ShowLoading();

        //package message data to be sent
        var detailsXml = new XElement("Details", _detailsInput);
        var questionXml = new XElement("Question", _questionInput);
        var emailXml = new XElement("Email", _emailInput);
        var userIdXml = new XElement("UserId", AppData.CurrentUser?.Id);
        var visitorIdXml = new XElement("VisitorId", AppData.VisitorId);
        var messageXml = new XElement("Message", userIdXml,visitorIdXml, emailXml, Tools.TimeStampSystemXml, detailsXml, questionXml);

        //send message to API server
        await ServerManager.WriteToServerXmlReply(AppData.URL.AddMessageApi, messageXml);

        //hide loading box
        _jsRuntime.HideAlert();

        //let user know, with ok confirmation so user see message
        await _jsRuntime.ShowAlert("success", AlertText.AskAstrologer, true);

        //reload page
        WebsiteTools.ReloadPage(_navigation);
    }


    /// <summary>
    /// Checks if validation of all input fields
    /// </summary>
    private bool ValidationPassed()
    {

        //TEST 1
        //email is filled
        if (string.IsNullOrWhiteSpace(_emailInput))
        {
            //mark invalid & alert user
            _jsRuntime.ShowAlert("error", AlertText.AskAstrologerEmail, true);
            return false;
        }

        //TEST 2
        //email is filled
        if (string.IsNullOrWhiteSpace(_questionInput))
        {
            //mark invalid & alert user
            var msg = $"Please select a question or choose other";
            _jsRuntime.ShowAlert("error", msg, true);
            return false;
        }


        //if control reaches here than, it's valid
        return true;
    }
}
